name: Check

on:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
  workflow_call:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=true"

jobs:
  check:
    name: Check on ${{ matrix.os.runner }}
    runs-on: ${{ matrix.os.runner }}
    defaults:
      run:
        shell: ${{ matrix.os.shell }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - runner: macos-latest
            shell: bash
          - runner: ubuntu-latest
            shell: bash
          - runner: windows-latest
            shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        if: ${{ runner.os == 'Windows' }}
        with:
          msystem: MINGW64
          path-type: inherit
          update: true
          install: >-
            tar
            make
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-extra-cmake-modules
            mingw64/mingw-w64-x86_64-cyrus-sasl

      - uses: actions/checkout@v3.0.2

      - name: Restore native library cache
        id: cache-native
        uses: actions/cache@v3.0.4
        with:
          path: |
            scripts/build
          key: ${{ runner.os }}-native-${{ hashFiles('./scripts/*') }}

      - name: Setup native libraries
        run: ./scripts/setup.sh

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Restore Gradle cache
        id: cache-gradle
        uses: actions/cache@v3.0.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Gradle Compile
        run: ./gradlew compile assemble --scan

      - name: Gradle Check
        run: ./gradlew check --scan

      - name: Gradle Check Sandbox
        env:
          SANDBOX: true
        working-directory: klip-sandbox
        run: ./gradlew check --scan

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: reports-${{ runner.os }}
          path: |
            **/build/reports
