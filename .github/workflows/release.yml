name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: Package version to publish under
      skipGradlePluginPortal:
        description: Should we skip publishing to Gradle Plugin Portal
        required: false
        default: "true"
      skipGitHub:
        description: Should we skip publishing to GitHub
        required: false
        default: "true"
      skipMavenCentral:
        description: Should we skip publishing to Maven Central
        required: false
        default: "true"
  release:
    types: [created]

env:
  VERSION: ${{ github.event.release.tag_name }}

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Check Root
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew check
      - name: Check Plugin
        shell: bash
        working-directory: gradle-plugin
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew check
      - name: Check Sandbox
        shell: bash
        working-directory: sandbox
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew check

  release-GradlePluginPortal:
    name: "Release: GradlePluginPortal"
    env:
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
    runs-on: ubuntu-latest
    needs: [ check ]
    if: ${{ github.event.inputs.skipGradlePluginPortal != 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Publish plugin to Gradle Plugin Portal
        shell: bash
        working-directory: gradle-plugin
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishPlugins -Pgradle.publish.key="${{ secrets.GRADLE_PUBLISH_KEY }}" -Pgradle.publish.secret="${{ secrets.GRADLE_PUBLISH_SECRET }}" -Pversion=${VERSION//v}

  release-GitHub:
    name: "Release: GitHub"
    env:
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
      GH_USERNAME: ${{ github.actor }}
      GH_PASSWORD: ${{ github.token }}
    runs-on: ubuntu-latest
    needs: [check]
    if: ${{ github.event.inputs.skipGitHub != 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Publish libs to GitHub Packages
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishAllPublicationsToGitHubRepository -Pversion=${VERSION//v}
      - name: Publish plugin to GitHub Packages
        shell: bash
        working-directory: gradle-plugin
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishAllPublicationsToGitHubRepository -Pversion=${VERSION//v}

  release-MavenCentral:
    name: "Release: MavenCentral"
    env:
      ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
      ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
      ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
      ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
      ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
    runs-on: ubuntu-latest
    needs: [ check ]
    if: ${{ github.event.inputs.skipMavenCentral != 'true' }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Publish libs to GitHub Packages
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishToSonatype closeSonatypeStagingRepository -Pversion=${VERSION//v}
      - name: Publish plugin to GitHub Packages
        shell: bash
        working-directory: gradle-plugin
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew publishToSonatype closeSonatypeStagingRepository -Pversion=${VERSION//v}

  publish-Pages:
    name: "Publish: Pages"
    runs-on: ubuntu-latest
    needs: [release-GradlePluginPortal, release-GitHub, release-MavenCentral]
    steps:
      - uses: actions/checkout@v2
      - name: Restore Gradle cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/yarn
            ~/.gradle/nodejs
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Set up JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Publish Pages
        shell: bash
        run: |
          VERSION=${VERSION:=${{ github.event.inputs.version }}}
          VERSION=${VERSION/v}
          ./gradlew dokkaHtmlMultiModule -Pversion=${VERSION//v};
          cp -avr build/dokka/htmlMultiModule/ public;
          find public -type f -regex '.*\.\(htm\|html\|txt\|text\|js\|css\)$' -exec gzip -f -k {} \;
          echo '/klip /klip/klip/index.html 301' > public/_redirects;
          echo '/klip/index.html /klip/klip/index.html 301' >> public/_redirects;
      - uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: public
        env:
          GITHUB_TOKEN: ${{ github.token }}